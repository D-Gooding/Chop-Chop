@article{ai5010005,
  author   = {Butt, Marya and Glas, Nick and Monsuur, Jaimy and Stoop, Ruben and de Keijzer, Ander},
  title    = {Application of YOLOv8 and Detectron2 for Bullet Hole Detection and Score Calculation from Shooting Cards},
  journal  = {AI},
  volume   = {5},
  year     = {2024},
  number   = {1},
  pages    = {72--90},
  url      = {https://www.mdpi.com/2673-2688/5/1/5},
  issn     = {2673-2688},
  abstract = {Scoring targets in shooting sports is a crucial and time-consuming task that relies on manually counting bullet holes. This paper introduces an automatic score detection model using object detection techniques. The study contributes to the field of computer vision by comparing the performance of seven models (belonging to two different architectural setups) and by making the dataset publicly available. Another value-added aspect is the inclusion of three variants of the object detection model, YOLOv8, recently released in 2023 (at the time of writing). Five of the used models are single-shot detectors, while two belong to the two-shot detectors category. The dataset was manually captured from the shooting range and expanded by generating more versatile data using Python code. Before the dataset was trained to develop models, it was resized (640 Ã— 640) and augmented using Roboflow API. The trained models were then assessed on the test dataset, and their performance was compared using matrices like mAP50, mAP50-90, precision, and recall. The results showed that YOLOv8 models can detect multiple objects with good confidence scores. Among these models, YOLOv8m performed the best, with the highest mAP50 value of 96.7%, followed by the performance of YOLOv8s with the mAP50 value of 96.5%. It is suggested that if the system is to be implemented in a real-time environment, YOLOv8s is a better choice since it took significantly less inference time (2.3 ms) than YOLOv8m (5.7 ms) and yet generated a competitive mAP50 of 96.5%.},
  doi      = {10.3390/ai5010005}
}

@online{CiteDrive2022,
  title        = {Website Title},
  author       = {Author Name},
  year         = {Year Published},
  howpublished = {http://website-url.com},
  urldate      = {Use the date of access}
}

@online{Fast-CNN-Rasberry-Pi,
  title        = {Faster RCNN on Raspberry Pi - Github},
  author       = {EdjeElectronics},
  year         = {2019},
  howpublished = {https://github.com/EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi/issues/57},
  urldate      = {2024-03-12}
}

@online{FasterRCNN,
  title        = {What is Faster R-CNN?},
  author       = {RoboFlow},
  year         = {2023},
  howpublished = {https://roboflow.com/model/faster-r-cnn},
  urldate      = {2024-03-12}
}

@software{Jocher_Ultralytics_YOLO_2023,
  author  = {Jocher, Glenn and Chaurasia, Ayush and Qiu, Jing},
  license = {AGPL-3.0},
  month   = jan,
  title   = {{Ultralytics YOLO}},
  url     = {https://github.com/ultralytics/ultralytics},
  version = {8.0.0},
  year    = {2023}
}

@article{joiya2022object,
  title   = {Object detection: Yolo vs Faster R-CNN},
  author  = {Joiya, Fiza},
  journal = {Int Res J Modern Eng Technol Sci},
  volume  = {9},
  pages   = {1911--1915},
  year    = {2022}
}

@online{metasmartcameras,
  title        = {Meta smart camera portal with detectron2},
  author       = {Meta},
  year         = {2019},
  howpublished = {https://ai.meta.com/blog/smart-camera-portal-advances/},
  urldate      = {2024-03-17}
}

@article{rajeshwari2019object,
  title   = {Object detection: an overview},
  author  = {Rajeshwari, P and Abhishek, P and Srikanth, P and Vinod, T},
  journal = {Int. J. Trend Sci. Res. Dev.(IJTSRD)},
  volume  = {3},
  number  = {1},
  pages   = {1663--1665},
  year    = {2019}
}

@online{RoboFlow-Software,
  title        = {Roboflow 1.0},
  author       = {Dwyer, B. and Nelson, J. and Hansen, T. and others},
  year         = {2024},
  howpublished = {https://roboflow.com},
  urldate      = {2023}
}

@misc{wu2019detectron2,
  author       = {Yuxin Wu and Alexander Kirillov and Francisco Massa and Wan-Yen Lo and Ross Girshick},
  title        = {Detectron2},
  howpublished = {https://github.com/facebookresearch/detectron2},
  year         = {2019}
}

@online{trainvalidtest,
  title        = {Training, Validation and Test Sets: How To Split Machine Learning Data},
  author       = {Kili},
  year         = {2018},
  howpublished = {https://kili-technology.com/training-data/training-validation-and-test-sets-how-to-split-machine-learning-data},
  urldate      = {18/03/2024}
}

@software{OnionBot-github,
  title = {OnionBot},
  author = {Bennet Cobley},
  license ={GPL-3.0 and CERN-OHL-S-2.0},
  year = {2023},
  howpublished = {https://github.com/onionbot},
  urldate = {21/03/2024}
}

@misc{cobley2020onionbot,
      title={OnionBot: A System for Collaborative Computational Cooking}, 
      author={Bennet Cobley and David Boyle},
      year={2020},
      eprint={2011.05039},
      archivePrefix={arXiv},
      primaryClass={cs.HC}
}

@article{cudacuda,
  title={What is CUDA?},
  author={CUDA, C}
}

@article{ghorpade2012gpgpu,
  title={GPGPU processing in CUDA architecture},
  author={Ghorpade, Jayshree and Parande, Jitendra and Kulkarni, Madhura and Bawaskar, Amit},
  journal={arXiv preprint arXiv:1202.4347},
  year={2012}
}

@online{nvidiapytorch,
  title        = {nvidia pytorch},
  author       = {Author Name},
  year         = {2024},
  howpublished = {https://www.nvidia.com/en-us/glossary/pytorch/},
  urldate      = {20/03/2024}
}